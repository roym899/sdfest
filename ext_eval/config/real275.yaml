# Standalone config to use with real275_evaluation.py
config:
  - methods:
      cass: 
        config_dict: ./cass.yaml
      sdfest:
        config_dict: ./sdfest.yaml
      nocs:
        config_dict: ./nocs.yaml
methods:
  cass:
    type: method_wrappers.CASSWrapper
  sdfest:
    type: method_wrappers.SDFEstWrapper
  nocs:
    type: method_wrappers.NOCSWrapper

# See https://github.com/hughw19/NOCS_CVPR2019/blob/master/detect_eval.py for camera
# intrinsics (seems to be different from info.txt in the dataset folder).
camera:
  width: 640
  height: 480
  fx: 591.0125
  fy: 590.16775
  cx: 322.525
  cy: 244.11084
  pixel_center: 0
visualize_input: False
visualize_prediction: False
visualize_gt: False
store_visualization: False
dataset: "nocs"
detection: "gt"
run_name: ""
metrics:
  correct_position:
    position_thresholds: [0, 0.01, 0.02, 0.03, 0.04, 0.05, 0.06, 0.07, 0.08, 0.09, 0.10, null]
    deg_thresholds: [null]
    iou_thresholds: [null]
  correct_degree:
    position_thresholds: [null]
    deg_thresholds: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 20, 30, 40]
    iou_thresholds: [null]
  correct_5deg5cm:
    position_thresholds: [0.05]
    deg_thresholds: [5]
    iou_thresholds: [null]
  correct_180deg1000cm:
    position_thresholds: [10.0]
    deg_thresholds: [180]
    iou_thresholds: [null]
  # mean_accuracy: 
  #   pointwise_f: sdf_estimation.metrics.mean_accuracy
  #   kwargs: {}
  # mean_completeness: 
  #   pointwise_f: sdf_estimation.metrics.mean_completeness
  #   kwargs: {}
  # chamfer: 
  #   f: sdf_estimation.metrics.symmetric_chamfer
  #   kwargs: {}
